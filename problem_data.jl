#Reading Hydroplants data 
HydroP = CSV.read("hydroplant.csv");
HydroP = convert(Array{Float64}, HydroP[:,2:length(HydroP[1,:])]);
nbHydroP=length(HydroP[:,1]);
nbHydroP = convert(Int64, nbHydroP);

#Reading Thermoplants data 
ThermoP = CSV.read("thermoplant.csv");
ThermoP = convert(Array{Float64}, ThermoP[:,2:length(ThermoP[1,:])]);
nbThermoP=length(ThermoP[:,1]);
nbThermoP = convert(Int64, nbThermoP);

#Reading Scenarios data 
SCEN = CSV.read("Scenarios.csv");
SCEN = convert(Array{Float64}, SCEN[:,:]);

#Based on the parameters ==> define: # of stages & # of realization per-stage
nbStages = parse(Int, PARAMS[2][1:length(PARAMS[2])-1]);
nbRealization = parse(Int, PARAMS[3][1:length(PARAMS[3])-1]);
max_Realization = 1000;
#create a local copy for the instance data
scen = zeros((nbStages-1)*nbRealization+1,nbHydroP+2);
scen[1,:] = SCEN[1,:]
for t=2:nbStages
    for r=1:nbRealization
        scen[1+nbRealization*(t-2)+r,:] = SCEN[1+max_Realization*(t-2)+r,:]
    end
end

fname = "OSpath.csv"
OSpath_big = Matrix(CSV.read(fname, DataFrame))
    
#parameter that translates the water flow amount into water level in the reservior
c0 = 2.592;

#we set the demand to be a constant 14500 in each stage
demand = zeros(nbStages);

#demand and unit penalty cost for unsatisfied demand
if PARAMS[2] == "D"
    cp = 1; #penalty
    demand[:]= 15500; #demand
else
    cp = 4500; #penalty
    demand[:]=14500; #demand
end

#maximum allowed amount of turbined flow in hydro plant h in stage t
qbar = HydroP[:,1];

#minimum/maximum level of water allowed in hydro plant h
vlow = HydroP[:,2];
vup = HydroP[:,3];

HydroP[:,4] = HydroP[:,4]./5
#initial amount of water at hydro plant h
x0 = HydroP[:,4].*(vup-vlow);
vup = vup-vlow;
vlow = vlow-vlow;

#amount of power generated by releasing one unit of water flow in hydro plant h
rh = HydroP[:,5];


#maximum allowed amount of power generated by thermal plant f in stage t
fbar = ThermoP[:,1];

#unit cost of thermal power generated from plant f
cf = ThermoP[:,2];

#The Network structure is as follows:

#Set of Hydro plants with reservoir 
HReserv = [1,4,5,11,14,15,16,17,18,19,20,22,23,26,28,30];

#Set of Hydro plants with No reservoir (Run-of river)
HNoReserv = [2,3,6,7,8,9,10,12,13,21,24,25,27,29];

#Graph adjacency list, where A(i) are the set of nodes preceding node i 
Graph = [[],[1],[2],[3],[4],[5],[6],[7],[8],[9],[],[11],[12],[10,13],[14],[],[],[],
         [18],[16,17,19],[20],[21],[],[23],[24],[25],[26],[15,22,27],[28],[29]];

data = scen, nbStages, nbRealization, nbHydroP, nbThermoP, cp, demand, qbar, vlow, vup, x0, rh, fbar, cf, c0, HReserv, HNoReserv, Graph;
